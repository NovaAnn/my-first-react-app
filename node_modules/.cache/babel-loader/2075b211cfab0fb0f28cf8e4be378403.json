{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samue\\\\Desktop\\\\src-React\\\\src\\\\pages\\\\MealsPage.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Item from \"../components/StartingPage/Item\";\nimport classes from \"../components/StartingPage/Item.module.css\"; // import HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n// import Comments from \"../components/comments/Comments\";\n// import useHttp from \"../hooks/use-http\";\n// import { getSingleQuote } from \"../lib/api\";\n// import LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealsPage = () => {\n  _s();\n\n  console.log(\"Inside MealsPage\");\n  const match = useRouteMatch();\n  const params = useParams();\n  let objArray1 = [];\n  const [objArray, setObjArray] = useState([]);\n  console.log(objArray);\n  console.log(params);\n  const {\n    mealId\n  } = params; //   const {\n  //     sendRequest,\n  //     status,\n  //     data: loadedQuote,\n  //     error,\n  //   } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    objArray1 = [];\n\n    const fetchData = async function () {\n      const res = await fetch(`https://actual-react-project-default-rtdb.firebaseio.com/meals/${mealId}.json`);\n      const responseData = await res.json();\n      console.log(responseData);\n\n      for (const key in responseData) {\n        const eachObj = {\n          id: key,\n          amount: 1,\n          ...responseData[key]\n        };\n        console.log(eachObj);\n        objArray1.push(eachObj);\n      }\n\n      console.log(objArray1);\n      setObjArray(objArray1);\n    };\n\n    fetchData();\n  }, [mealId]); //   if (status === \"pending\") {\n  //     return (\n  //       <div className=\"centered\">\n  //         <LoadingSpinner />\n  //       </div>\n  //     );\n  //   }\n  //   if (error) {\n  //     return <p className=\"centered\">{error}</p>;\n  //   }\n  //   if (!loadedQuote.text) {\n  //     return <p>No quote found!</p>;\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mainDiv,\n      children: objArray.map(obj => {\n        console.log(obj);\n        console.log(objArray);\n        return /*#__PURE__*/_jsxDEV(Item, {\n          data: obj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealsPage, \"T2N7vjpof3d3HKMeK0ijRWvNVj8=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = MealsPage;\nexport default MealsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealsPage\");","map":{"version":3,"sources":["C:/Users/samue/Desktop/src-React/src/pages/MealsPage.js"],"names":["Fragment","useEffect","useState","useParams","Route","Link","useRouteMatch","Item","classes","MealsPage","console","log","match","params","objArray1","objArray","setObjArray","mealId","fetchData","res","fetch","responseData","json","key","eachObj","id","amount","push","mainDiv","map","obj"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,OAAP,MAAoB,4CAApB,C,CACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,QAAMC,KAAK,GAAGN,aAAa,EAA3B;AACA,QAAMO,MAAM,GAAGV,SAAS,EAAxB;AACA,MAAIW,SAAS,GAAG,EAAhB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAaJ,MAAnB,CATsB,CAWtB;AACA;AACA;AACA;AACA;AACA;;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,SAAS,GAAG,EAAZ;;AACA,UAAMI,SAAS,GAAG,kBAAkB;AAClC,YAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,kEAAiEH,MAAO,OADpD,CAAvB;AAGA,YAAMI,YAAY,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAA3B;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYU,YAAZ;;AACA,WAAK,MAAME,GAAX,IAAkBF,YAAlB,EAAgC;AAC9B,cAAMG,OAAO,GAAG;AACdC,UAAAA,EAAE,EAAEF,GADU;AAEdG,UAAAA,MAAM,EAAE,CAFM;AAGd,aAAGL,YAAY,CAACE,GAAD;AAHD,SAAhB;AAKAb,QAAAA,OAAO,CAACC,GAAR,CAAYa,OAAZ;AACAV,QAAAA,SAAS,CAACa,IAAV,CAAeH,OAAf;AACD;;AACDd,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACAE,MAAAA,WAAW,CAACF,SAAD,CAAX;AACD,KAjBD;;AAkBAI,IAAAA,SAAS;AACV,GArBQ,EAqBN,CAACD,MAAD,CArBM,CAAT,CAlBsB,CAyCtB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAET,OAAO,CAACoB,OAAxB;AAAA,gBACGb,QAAQ,CAACc,GAAT,CAAcC,GAAD,IAAS;AACrBpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACApB,QAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,4BAAO,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEe;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAJA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApED;;GAAMrB,S;UAGUH,a,EACCH,S;;;KAJXM,S;AAsEN,eAAeA,SAAf","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport Item from \"../components/StartingPage/Item\";\r\nimport classes from \"../components/StartingPage/Item.module.css\";\r\n// import HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n// import Comments from \"../components/comments/Comments\";\r\n// import useHttp from \"../hooks/use-http\";\r\n// import { getSingleQuote } from \"../lib/api\";\r\n// import LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst MealsPage = () => {\r\n  console.log(\"Inside MealsPage\");\r\n\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n  let objArray1 = [];\r\n  const [objArray, setObjArray] = useState([]);\r\n  console.log(objArray);\r\n  console.log(params);\r\n  const { mealId } = params;\r\n\r\n  //   const {\r\n  //     sendRequest,\r\n  //     status,\r\n  //     data: loadedQuote,\r\n  //     error,\r\n  //   } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    objArray1 = [];\r\n    const fetchData = async function () {\r\n      const res = await fetch(\r\n        `https://actual-react-project-default-rtdb.firebaseio.com/meals/${mealId}.json`\r\n      );\r\n      const responseData = await res.json();\r\n      console.log(responseData);\r\n      for (const key in responseData) {\r\n        const eachObj = {\r\n          id: key,\r\n          amount: 1,\r\n          ...responseData[key],\r\n        };\r\n        console.log(eachObj);\r\n        objArray1.push(eachObj);\r\n      }\r\n      console.log(objArray1);\r\n      setObjArray(objArray1);\r\n    };\r\n    fetchData();\r\n  }, [mealId]);\r\n\r\n  //   if (status === \"pending\") {\r\n  //     return (\r\n  //       <div className=\"centered\">\r\n  //         <LoadingSpinner />\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n\r\n  //   if (error) {\r\n  //     return <p className=\"centered\">{error}</p>;\r\n  //   }\r\n\r\n  //   if (!loadedQuote.text) {\r\n  //     return <p>No quote found!</p>;\r\n  //   }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.mainDiv}>\r\n        {objArray.map((obj) => {\r\n          console.log(obj);\r\n          console.log(objArray);\r\n          return <Item data={obj} />;\r\n        })}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MealsPage;\r\n"]},"metadata":{},"sourceType":"module"}
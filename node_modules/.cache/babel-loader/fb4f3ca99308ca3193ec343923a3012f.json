{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samue\\\\Desktop\\\\src-React\\\\src\\\\components\\\\Layout\\\\CartModal.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"../../store/cart-context\";\nimport AuthContext from \"../../store/auth-context\";\nimport CartModalItem from \"./CartModalItem\";\nimport React, { useContext, useState } from \"react\";\nimport Modal from \"./Modal\";\nimport classes from \"./CartModal.module.css\";\nimport Checkout from \"./Checkout\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet graphqlQuery;\nlet response;\nlet arrayItems;\n\nconst CartModal = props => {\n  _s();\n\n  const [isCheckingout, setIsCheckingout] = useState(false);\n  const [isSending, setIsSending] = useState(false);\n  const [products, setProducts] = useState(false);\n  const history = useHistory();\n  console.log(isSending);\n  console.log(\"Inside CartModal\");\n  const cartCtx = useContext(CartContext);\n  const authCtx = useContext(AuthContext);\n  console.log(authCtx.token);\n  console.log(cartCtx.items);\n  graphqlQuery = {\n    query: ` query {\n          getCart(id: \"619ce3dd4094d8b29af3537c\") {\n    products{\n      product{\n        title\n        price\n      }\n      quantity\n    }\n  }   \n               \n          }`\n  };\n\n  const firstTimeFunction = graphqlQuery => {\n    console.log(graphqlQuery);\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(graphqlQuery),\n      headers: {\n        Authorization: \"Bearer \" + authCtx.token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(resData => {\n      response = resData.data;\n      console.log(response);\n      setProducts(true);\n    });\n  };\n\n  firstTimeFunction(graphqlQuery);\n\n  if (response) {\n    arrayItems = response.getCart.products;\n    console.log(\"True\");\n    console.log(arrayItems);\n  }\n\n  const cartItemRemoveHandler = id => {\n    console.log(\"Inside remove handler\");\n    graphqlQuery = {\n      query: ` mutation {\n          deleteProduct(id: \"${id}\") \n               \n          }`\n    };\n    firstTimeFunction(graphqlQuery);\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    console.log(item);\n    graphqlQuery = {\n      query: ` mutation {\n          addProduct(id: \"${item.id}\") \n               \n          }`\n    };\n    firstTimeFunction(graphqlQuery);\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler = () => {\n    setIsCheckingout(true);\n  };\n\n  const timeOutHandler = () => {\n    cartCtx.clearCart();\n    history.replace(\"/\");\n  };\n\n  const submitOrderHandler = async userData => {\n    // await fetch(\n    //   \"https://actual-react-project-default-rtdb.firebaseio.com/orders.json\",\n    //   {\n    //     method: \"POST\",\n    //     body: JSON.stringify({\n    //       user: userData,\n    //       orderedItems: cartCtx.items,\n    //       totalAmount: cartCtx.totalAmount,\n    //     }),\n    //   }\n    // );\n    graphqlQuery = {\n      query: ` mutation {\n          postOrder          \n          }`\n    };\n    firstTimeFunction(graphqlQuery);\n    console.log(\"sending\");\n    setIsSending(true);\n    const timer = setTimeout(timeOutHandler, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: [!isSending && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes[\"cart-items\"],\n      children: arrayItems && arrayItems.map(item => /*#__PURE__*/_jsxDEV(CartModalItem, {\n        price: item.product.price,\n        amount: item.quantity,\n        name: item.product.title,\n        onRemove: cartItemRemoveHandler.bind(null, item.product.id),\n        onAdd: cartItemAddHandler.bind(null, item.product)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), cartCtx.items.length > 0 && !isSending && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.totAmount,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$\", cartCtx.totalAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), !isCheckingout && !isSending && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actionflex,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: orderHandler,\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), isCheckingout && !isSending && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), isSending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sending,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://media.istockphoto.com/vectors/food-delivery-design-vector-illustration-vector-id582262462\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Your order has been processed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartModal, \"nF6kQymxC1vnvxWUrUpQHN7Dl2Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = CartModal;\nexport default CartModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartModal\");","map":{"version":3,"sources":["C:/Users/samue/Desktop/src-React/src/components/Layout/CartModal.js"],"names":["CartContext","AuthContext","CartModalItem","React","useContext","useState","Modal","classes","Checkout","useHistory","graphqlQuery","response","arrayItems","CartModal","props","isCheckingout","setIsCheckingout","isSending","setIsSending","products","setProducts","history","console","log","cartCtx","authCtx","token","items","query","firstTimeFunction","fetch","method","body","JSON","stringify","headers","Authorization","then","res","json","resData","data","getCart","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","orderHandler","timeOutHandler","clearCart","replace","submitOrderHandler","userData","timer","setTimeout","map","product","price","quantity","title","bind","length","totAmount","totalAmount","actionflex","onClose","sending"],"mappings":"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","sourcesContent":["import CartContext from \"../../store/cart-context\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport CartModalItem from \"./CartModalItem\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport classes from \"./CartModal.module.css\";\r\nimport Checkout from \"./Checkout\";\r\nimport { useHistory } from \"react-router\";\r\nlet graphqlQuery;\r\nlet response;\r\nlet arrayItems;\r\n\r\nconst CartModal = (props) => {\r\n  const [isCheckingout, setIsCheckingout] = useState(false);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [products, setProducts] = useState(false);\r\n  const history = useHistory();\r\n  console.log(isSending);\r\n  console.log(\"Inside CartModal\");\r\n  const cartCtx = useContext(CartContext);\r\n  const authCtx = useContext(AuthContext);\r\n  console.log(authCtx.token);\r\n  console.log(cartCtx.items);\r\n  graphqlQuery = {\r\n    query: ` query {\r\n          getCart(id: \"619ce3dd4094d8b29af3537c\") {\r\n    products{\r\n      product{\r\n        title\r\n        price\r\n      }\r\n      quantity\r\n    }\r\n  }   \r\n               \r\n          }`,\r\n  };\r\n  const firstTimeFunction = (graphqlQuery) => {\r\n    console.log(graphqlQuery);\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(graphqlQuery),\r\n      headers: {\r\n        Authorization: \"Bearer \" + authCtx.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        response = resData.data;\r\n        console.log(response);\r\n        setProducts(true);\r\n      });\r\n  };\r\n  firstTimeFunction(graphqlQuery);\r\n\r\n  if (response) {\r\n    arrayItems = response.getCart.products;\r\n    console.log(\"True\");\r\n    console.log(arrayItems);\r\n  }\r\n  const cartItemRemoveHandler = (id) => {\r\n    console.log(\"Inside remove handler\");\r\n    graphqlQuery = {\r\n      query: ` mutation {\r\n          deleteProduct(id: \"${id}\") \r\n               \r\n          }`,\r\n    };\r\n    firstTimeFunction(graphqlQuery);\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    console.log(item);\r\n    graphqlQuery = {\r\n      query: ` mutation {\r\n          addProduct(id: \"${item.id}\") \r\n               \r\n          }`,\r\n    };\r\n    firstTimeFunction(graphqlQuery);\r\n    cartCtx.addItem(item);\r\n  };\r\n  const orderHandler = () => {\r\n    setIsCheckingout(true);\r\n  };\r\n  const timeOutHandler = () => {\r\n    cartCtx.clearCart();\r\n    history.replace(\"/\");\r\n  };\r\n  const submitOrderHandler = async (userData) => {\r\n    // await fetch(\r\n    //   \"https://actual-react-project-default-rtdb.firebaseio.com/orders.json\",\r\n    //   {\r\n    //     method: \"POST\",\r\n    //     body: JSON.stringify({\r\n    //       user: userData,\r\n    //       orderedItems: cartCtx.items,\r\n    //       totalAmount: cartCtx.totalAmount,\r\n    //     }),\r\n    //   }\r\n    // );\r\n    graphqlQuery = {\r\n      query: ` mutation {\r\n          postOrder          \r\n          }`,\r\n    };\r\n    firstTimeFunction(graphqlQuery);\r\n    console.log(\"sending\");\r\n\r\n    setIsSending(true);\r\n\r\n    const timer = setTimeout(timeOutHandler, 3000);\r\n  };\r\n  return (\r\n    <Modal>\r\n      {!isSending && (\r\n        <ul className={classes[\"cart-items\"]}>\r\n          {arrayItems &&\r\n            arrayItems.map((item) => (\r\n              <CartModalItem\r\n                price={item.product.price}\r\n                amount={item.quantity}\r\n                name={item.product.title}\r\n                onRemove={cartItemRemoveHandler.bind(null, item.product.id)}\r\n                onAdd={cartItemAddHandler.bind(null, item.product)}\r\n              />\r\n            ))}\r\n        </ul>\r\n      )}\r\n      {cartCtx.items.length > 0 && !isSending && (\r\n        <React.Fragment>\r\n          <div className={classes.totAmount}>\r\n            <span>Total Amount:</span>\r\n            <span>${cartCtx.totalAmount}</span>\r\n          </div>\r\n          {!isCheckingout && !isSending && (\r\n            <div className={classes.actionflex}>\r\n              <button onClick={props.onClose}>Cancel</button>\r\n              <button onClick={orderHandler}>Checkout</button>\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n      {isCheckingout && !isSending && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {isSending && (\r\n        <div className={classes.sending}>\r\n          <img src=\"https://media.istockphoto.com/vectors/food-delivery-design-vector-illustration-vector-id582262462\" />\r\n          <p> Your order has been processed!</p>\r\n        </div>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\nexport default CartModal;\r\n"]},"metadata":{},"sourceType":"module"}
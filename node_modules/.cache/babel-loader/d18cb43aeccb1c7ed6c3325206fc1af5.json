{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samue\\\\Desktop\\\\src-React\\\\src\\\\components\\\\Layout\\\\CartModal.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"../../store/cart-context\";\nimport AuthContext from \"../../store/auth-context\";\nimport CartModalItem from \"./CartModalItem\";\nimport React, { Fragment, useContext, useState } from \"react\";\nimport Modal from \"./Modal\";\nimport classes from \"./CartModal.module.css\";\nimport Checkout from \"./Checkout\";\nimport { useHistory } from \"react-router\";\nimport { useStripe } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet graphqlQuery;\nlet response;\nlet arrayItems;\nlet firstTime;\nlet newArrayItems;\n\nconst CartModal = props => {\n  _s();\n\n  firstTime = false;\n  const stripe = useStripe();\n  const [isCheckingout, setIsCheckingout] = useState(false);\n  const [isSending, setIsSending] = useState(false);\n  const [products, setProducts] = useState(false);\n  const history = useHistory();\n  const cartCtx = useContext(CartContext);\n  const authCtx = useContext(AuthContext);\n  graphqlQuery = {\n    query: ` query {\n          getCart {\n    products{\n      product{\n        title\n        price\n        _id\n        imageUrl\n      }\n      quantity\n    }\n  }   \n               \n          }`\n  };\n\n  const firstTimeFunction = async graphqlQuery => {\n    const jsonResponse = await fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(graphqlQuery),\n      headers: {\n        Authorization: \"Bearer \" + authCtx.token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    });\n  };\n\n  if (!products) {\n    firstTime = true;\n    firstTimeFunction(graphqlQuery);\n  }\n\n  const cartItemRemoveHandler = id => {\n    graphqlQuery = {\n      query: ` mutation {\n          deleteProduct(id: \"${id}\") \n               \n          }`\n    };\n    firstTimeFunction(graphqlQuery);\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    graphqlQuery = {\n      query: ` mutation {\n          addProduct(id: \"${item.id}\") \n               \n          }`\n    };\n    firstTimeFunction(graphqlQuery);\n    cartCtx.addItem({\n      id: item.id,\n      name: item.name,\n      amount: 1,\n      price: +item.price,\n      image: item.image\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckingout(true);\n  };\n\n  const timeOutHandler = () => {\n    cartCtx.clearCart();\n    history.replace(\"/\");\n  };\n\n  const submitOrderHandler = async userData => {\n    const result = await fetch(\"http://localhost:8000/getstripesession/5600\", {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + authCtx.token\n      },\n      body: JSON.stringify({\n        amount: 5600\n      })\n    }).then(res => {\n      return res.json();\n    });\n    const confirmPayment = await stripe.confirmCardPayment(result, {\n      payment_method: userData.paymentMethodId\n    });\n\n    if (confirmPayment.paymentIntent.status == 'succeeded') {\n      const graphqlQuery = {\n        query: ` mutation {\n          postOrder          \n          }`\n      };\n      const jsonResponse = await fetch(\"http://localhost:8000/graphql\", {\n        method: \"POST\",\n        body: JSON.stringify(graphqlQuery),\n        headers: {\n          Authorization: \"Bearer \" + authCtx.token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        return res.json();\n      });\n      setIsSending(true);\n      const timer = setTimeout(timeOutHandler, 3000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: [!isSending && cartCtx.items.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes[\"cart-items\"],\n      children: cartCtx.items && cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartModalItem, {\n        price: item.price,\n        amount: item.amount,\n        name: item.name,\n        onRemove: cartItemRemoveHandler.bind(null, item.id),\n        onAdd: cartItemAddHandler.bind(null, item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), cartCtx.items.length > 0 && !isSending && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.totAmount,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$\", cartCtx.totalAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), !isCheckingout && !isSending && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actionflex,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: orderHandler,\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this), isCheckingout && !isSending && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose,\n      totalAmount: cartCtx.totalAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), isSending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sending,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://media0.giphy.com/media/dAzkOoCgoFHtCAdFhe/200w.webp?cid=ecf05e47evrfhegpbmfzuhfehn0kcljuh9oc7oybsjmpblvw&rid=200w.webp&ct=g\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Your order has been processed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), !cartCtx.items.length && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No items in cart. Start adding. Good Luck!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actionflex,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartModal, \"Gs9nVauPTK7lV6d5X+n3ln5torw=\", false, function () {\n  return [useStripe, useHistory];\n});\n\n_c = CartModal;\nexport default CartModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartModal\");","map":{"version":3,"sources":["C:/Users/samue/Desktop/src-React/src/components/Layout/CartModal.js"],"names":["CartContext","AuthContext","CartModalItem","React","Fragment","useContext","useState","Modal","classes","Checkout","useHistory","useStripe","graphqlQuery","response","arrayItems","firstTime","newArrayItems","CartModal","props","stripe","isCheckingout","setIsCheckingout","isSending","setIsSending","products","setProducts","history","cartCtx","authCtx","query","firstTimeFunction","jsonResponse","fetch","method","body","JSON","stringify","headers","Authorization","token","then","res","json","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","name","amount","price","image","orderHandler","timeOutHandler","clearCart","replace","submitOrderHandler","userData","result","confirmPayment","confirmCardPayment","payment_method","paymentMethodId","paymentIntent","status","timer","setTimeout","items","length","map","bind","totAmount","totalAmount","actionflex","onClose","sending"],"mappings":"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","sourcesContent":["import CartContext from \"../../store/cart-context\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport CartModalItem from \"./CartModalItem\";\r\nimport React, { Fragment, useContext, useState } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport classes from \"./CartModal.module.css\";\r\nimport Checkout from \"./Checkout\";\r\nimport { useHistory } from \"react-router\";\r\nimport {useStripe} from \"@stripe/react-stripe-js\";\r\n\r\nlet graphqlQuery;\r\nlet response;\r\nlet arrayItems;\r\nlet firstTime;\r\nlet newArrayItems;\r\n\r\nconst CartModal = (props) => {\r\n  firstTime = false;\r\n  const stripe = useStripe();\r\n  const [isCheckingout, setIsCheckingout] = useState(false);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [products, setProducts] = useState(false);\r\n  const history = useHistory();\r\n  \r\n\r\n  const cartCtx = useContext(CartContext);\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  graphqlQuery = {\r\n    query: ` query {\r\n          getCart {\r\n    products{\r\n      product{\r\n        title\r\n        price\r\n        _id\r\n        imageUrl\r\n      }\r\n      quantity\r\n    }\r\n  }   \r\n               \r\n          }`,\r\n  };\r\n  const firstTimeFunction = async (graphqlQuery) => {\r\n    const jsonResponse = await fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(graphqlQuery),\r\n      headers: {\r\n        Authorization: \"Bearer \" + authCtx.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n    .then((res) => {\r\n      return res.json();\r\n    });\r\n\r\n  \r\n  };\r\n\r\n  if (!products){\r\n    firstTime = true;\r\n    firstTimeFunction(graphqlQuery);\r\n    \r\n  }\r\n \r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    graphqlQuery = {\r\n      query: ` mutation {\r\n          deleteProduct(id: \"${id}\") \r\n               \r\n          }`,\r\n    };\r\n    firstTimeFunction(graphqlQuery);\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    graphqlQuery = {\r\n      query: ` mutation {\r\n          addProduct(id: \"${item.id}\") \r\n               \r\n          }`,\r\n    };\r\n    firstTimeFunction(graphqlQuery);\r\n    cartCtx.addItem({\r\n      id: item.id,\r\n      name: item.name,\r\n      amount: 1,\r\n      price: +item.price,\r\n      image: item.image,\r\n    });\r\n  };\r\n  const orderHandler = () => {\r\n    setIsCheckingout(true);\r\n  };\r\n  const timeOutHandler = () => {\r\n    cartCtx.clearCart();\r\n    history.replace(\"/\");\r\n  };\r\n  const submitOrderHandler = async (userData) => {\r\n    const result = await fetch(\r\n      \"http://localhost:8000/getstripesession/5600\",\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: 'Bearer ' + authCtx.token\r\n        },\r\n        body: JSON.stringify({\r\n          amount:5600\r\n        })\r\n      }\r\n    ).then(res=>{\r\n    return res.json();\r\n  });\r\n \r\n\r\n  const confirmPayment = await stripe.confirmCardPayment(result,{\r\n    payment_method:userData.paymentMethodId,\r\n  });\r\n  \r\n  if (confirmPayment.paymentIntent.status == 'succeeded'){\r\n    const graphqlQuery = {\r\n      query: ` mutation {\r\n          postOrder          \r\n          }`,\r\n    };\r\n    const jsonResponse = await fetch(\"http://localhost:8000/graphql\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(graphqlQuery),\r\n    headers: {\r\n      Authorization: \"Bearer \" + authCtx.token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n  .then((res) => {\r\n    return res.json();\r\n  });\r\n\r\n  \r\n  setIsSending(true);\r\n\r\n  const timer = setTimeout(timeOutHandler, 3000);\r\n  }\r\n\r\n  };\r\n  return (\r\n    <Modal>\r\n      {!isSending && cartCtx.items.length > 0 && (\r\n        <ul className={classes[\"cart-items\"]}>\r\n          {cartCtx.items &&\r\n            cartCtx.items.map((item) => (\r\n              <CartModalItem\r\n                price={item.price}\r\n                amount={item.amount}\r\n                name={item.name}\r\n                onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n                onAdd={cartItemAddHandler.bind(null, item)}\r\n              />\r\n            ))}\r\n        </ul>\r\n      )}\r\n      {cartCtx.items.length > 0 && !isSending && (\r\n        <React.Fragment>\r\n          <div className={classes.totAmount}>\r\n            <span>Total Amount:</span>\r\n            <span>${cartCtx.totalAmount}</span>\r\n          </div>\r\n          {!isCheckingout && !isSending && (\r\n            <div className={classes.actionflex}>\r\n              <button onClick={props.onClose}>Cancel</button>\r\n              <button onClick={orderHandler}>Checkout</button>\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n      {isCheckingout && !isSending && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} totalAmount={cartCtx.totalAmount} />\r\n      )}\r\n      {isSending && (\r\n        <div className={classes.sending}>\r\n          <img src=\"https://media0.giphy.com/media/dAzkOoCgoFHtCAdFhe/200w.webp?cid=ecf05e47evrfhegpbmfzuhfehn0kcljuh9oc7oybsjmpblvw&rid=200w.webp&ct=g\" />\r\n          <p> Your order has been processed!</p>\r\n        </div>\r\n      )}\r\n      {!cartCtx.items.length && <Fragment><h3>No items in cart. Start adding. Good Luck!</h3>\r\n      <div className={classes.actionflex}>\r\n      <button onClick={props.onClose}>Close</button>\r\n    </div></Fragment>}\r\n    </Modal>\r\n  );\r\n};\r\nexport default CartModal;\r\n"]},"metadata":{},"sourceType":"module"}
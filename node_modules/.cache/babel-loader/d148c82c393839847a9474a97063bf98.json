{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samue\\\\Desktop\\\\src-React\\\\src\\\\store\\\\cart-provider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n  showCart: false\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    console.log(\"inside ADD fn\");\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    console.log(existingCartItemIndex);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    console.log(updatedItems);\n    console.log(updatedTotalAmount);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n      showCart: state.showCart\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n      showCart: state.showCart\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return defaultCartState;\n  }\n\n  if (action.type === \"TOGGLE\") {\n    const toggler = !state.showCart;\n    console.log(\"inside togglecart\");\n    return {\n      items: state.items,\n      totalAmount: state.totalAmount,\n      showCart: toggler\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    console.log(\"Inside add Context\");\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const clearCartHandler = () => {\n    dispatchCartAction({\n      type: \"CLEAR\"\n    });\n  };\n\n  const toggleCartHandler = () => {\n    dispatchCartAction({\n      type: \"TOGGLE\"\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    showCart: cartState.showCart,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler,\n    toggleCart: toggleCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/samue/Desktop/src-React/src/store/cart-provider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","showCart","cartReducer","state","action","type","console","log","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","toggler","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","toggleCartHandler","cartContext","addItem","removeItem","clearCart","toggleCart","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n  showCart: false,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    console.log(\"inside ADD fn\");\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    console.log(existingCartItemIndex);\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + 1,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n    console.log(updatedItems);\r\n    console.log(updatedTotalAmount);\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n      showCart: state.showCart,\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE\") {\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n      showCart: state.showCart,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"CLEAR\") {\r\n    return defaultCartState;\r\n  }\r\n  if (action.type === \"TOGGLE\") {\r\n    const toggler = !state.showCart;\r\n    console.log(\"inside togglecart\");\r\n    return {\r\n      items: state.items,\r\n      totalAmount: state.totalAmount,\r\n      showCart: toggler,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    console.log(\"Inside add Context\");\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({ type: \"CLEAR\" });\r\n  };\r\n  const toggleCartHandler = () => {\r\n    dispatchCartAction({ type: \"TOGGLE\" });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    showCart: cartState.showCart,\r\n\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler,\r\n    toggleCart: toggleCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}